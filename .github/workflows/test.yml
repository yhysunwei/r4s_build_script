name: Build releases

on:
  workflow_dispatch:
    inputs:
      device:
        description: 'Select device to build'
        required: true
        default: 'x86_64'
        type: choice
        options:
          - 'armv8'
          - 'nanopi-r4s'
          - 'nanopi-r5s'
          - 'netgear_r8500'
          - 'x86_64'
      build_options:
        description: 'Build options (separate multiple options with spaces)'
        required: false
        default: 'BUILD_FAST=y ENABLE_LTO=y ENABLE_MOLD=y ENABLE_LRNG=y ENABLE_BPF=y USE_GCC14=y'
        type: string

jobs:
  build:
    name: Build ${{ github.event.inputs.device }}
    runs-on: ubuntu-24.04
    defaults:
      run:
        shell: bash

    steps:
    - name: Setup variables
      run: |
        sudo timedatectl set-timezone 'Asia/Shanghai'
        git config --global user.name 'actions'
        git config --global user.email 'action@github.com'
        echo WORKDIR="/builder" >> "$GITHUB_ENV"

    - name: Show system
      run: |
        echo -e "\n\e[1;32mCPU:\e[0m"
        echo "$(grep 'model name' /proc/cpuinfo | head -1 | awk -F ': ' '{print $2}') ($(grep 'cpu MHz' /proc/cpuinfo | head -1 | awk -F ': ' '{print $2}')MHz) x $(grep processor /proc/cpuinfo  | wc -l)"
        echo -e "\n\e[1;32mMemory:\e[0m"
        free -h
        echo -e "\n\e[1;32mStorage:\e[0m"
        df -Th / /mnt
        echo -e "\n\e[1;32mSystem:\e[0m"
        lsb_release -a
        echo -e "\n\e[1;32mKernel:\e[0m"
        uname -a
        echo

    - name: Free disk space
      uses: sbwml/actions@free-disk
      with:
        build-mount-path: /builder

    - name: Build System Setup
      uses: sbwml/actions@openwrt-build-setup

    - name: Install LLVM
      uses: sbwml/actions@install-llvm

    - name: Compile OpenWrt
      working-directory: /builder
      id: compile
      continue-on-error: true
      run: |
        export GITHUB_REPO=${{ github.repository }}
        export ${{ github.event.inputs.build_options }}
        bash <(curl -sS https://raw.githubusercontent.com/${{ github.repository }}/master/openwrt/build.sh) rc2 ${{ github.event.inputs.device }}
        cd openwrt
        tags=$(git describe --abbrev=0 --tags)
        echo "latest_release=$tags" >>$GITHUB_ENV

    - name: Extensive logs after a failed compilation
      working-directory: /builder
      if: steps.compile.outcome == 'failure'
      run: |
        cd openwrt
        make download -j4
        
    - name: tar openwrt
      working-directory: /builder
      if: steps.compile.outcome == 'failure'
      run: |
        tar -zcf openwrt.tar.gz openwrt
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.event.inputs.device }}-openwrt-${{ env.latest_release }}
        path: ${{ env.WORKDIR }}/*.tar.gz

    - name: Create release
      continue-on-error: true
      uses: sbwml/release-action@main
      with:
        name: OpenWrt-${{ env.latest_release }}
        allowUpdates: true
        tag: ${{ env.latest_release }}
        commit: master
        replacesArtifacts: true
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: ${{ env.WORKDIR }}/*.tar.gz
